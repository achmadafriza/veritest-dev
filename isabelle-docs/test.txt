./compiler/grepped.java:999:optimization AbsIdempotence: "abs(abs(e)) |-> abs(e)"
./compiler/grepped.java:999:optimization AbsNegate: "abs(-e) |-> abs(e)"
./compiler/grepped.java:999:optimization RedundantSubAdd: "(a - b) + b |-> a when isAssociative +"
./compiler/grepped.java:999:optimization RedundantAddSub: "(b + a) - b |-> a when isAssociative +"
./compiler/grepped.java:999:optimization AddNeutral: "e + (const 0) |-> e"
./compiler/grepped.java:999:optimization MergeSignExtendAdd: "x + c |-> SignExtend((a + b) + c, x.ResultBits) when"
./compiler/grepped.java:999:optimization MergeZeroExtendAdd: "x + c |-> ZeroExtend((a + b) + c, x.ResultBits) when"
./compiler/grepped.java:999:optimization AddLeftNegateToSub: "-e + y |-> y - e"
./compiler/grepped.java:999:optimization AddRightNegateToSub: "x + -e |-> x - e"
./compiler/grepped.java:999:optimization AndEqual: "x & x |-> x"
./compiler/grepped.java:999:optimization AndNeutral: "x & (const (NOT 0)) |-> x"
./compiler/grepped.java:999:optimization AndSignExtend: "(UnaryExpr UnarySignExtend x) & (ConstantExpr e)"
./compiler/grepped.java:999:optimization AndNots: "~x & ~y = ~(x | y)"
./compiler/grepped.java:999:optimization ConditionalEqualBranches: "(cond ? v : v) |-> v"
./compiler/grepped.java:999:optimization ConditionalEqualIsRHS: "((x == y) ? x : y) |-> y"
./compiler/grepped.java:999:optimization normalizeX: "x == 0 ? 0 : 1 |-> x (when (stamp_expr x = IntegerStamp xBits lo hi) && x.upMask == 1) // todo sure about encoding"
./compiler/grepped.java:999:optimization flipX: "x == 0 ? 1 : 0 |-> (x ^ 1) (when (stamp_expr x = IntegerStamp xBits lo hi) && x.upMask == 1) // todo sure about encoding"
./compiler/grepped.java:999:optimization normalizeX2: "x == 1 ? 1 : 0 |-> x (when (stamp_expr x = IntegerStamp xBits lo hi) && x.upMask == 1) // todo sure about encoding"
./compiler/grepped.java:999:optimization flipX2: "x == 1 ? 0 : 1 |-> (x ^ 1) (when (stamp_expr x = IntegerStamp xBits lo hi) && x.upMask == 1) // todo sure about encoding"
./compiler/grepped.java:999:optimization OptimiseIntegerTest: "(x & 1) == 0 ? 0 : 1 |-> (x & 1)"
./compiler/grepped.java:999:optimization ConvertTernaryIntoShift: "((x < 0) ? (x + y) : x) |->"
./compiler/grepped.java:999:optimization FloatTruncateTernary1: "x < 0.0 ? ceil(x) : floor(x) |-> RoundNode(x, TRUNCATE)"
./compiler/grepped.java:999:optimization FloatTruncateTernary2: "0.0 < x ? floor(x) : ceil(x) |-> RoundNode(x, TRUNCATE)"
./compiler/grepped.java:999:optimization NegateConditionFlipBranches: "(~c) ? c_1 : c_2 |-> c ? c_2 : c_1"
./compiler/grepped.java:999:optimization DefaultTrueBranch: "true ? c_1 : c_2 |-> c_1"
./compiler/grepped.java:999:optimization DefaultFalseBranch: "false ? c_1 : c_2 |-> c_2"
./compiler/grepped.java:999:optimization FloatDivByOneIsSelf: "(x / 1.0) |-> x"
./compiler/grepped.java:999:optimization TransformShiftIntoMul: "(x << const(y)) |-> x * 2^(const(y))"
./compiler/grepped.java:999:optimization EliminateRHS: "(x << const(y)) |-> x"
./compiler/grepped.java:999:optimization LeftShiftBecomesZero: "((a << const(b)) << const(y)) |-> 0"
./compiler/grepped.java:999:optimization EliminateOtherLeftShift: "((a << const(b)) << const(y)) |-> (a << total)"
./compiler/grepped.java:999:optimization ShiftLeftByConstantAnd: "(x << const(y)) |-> (x << const(y & mask(x << y)))"
./compiler/grepped.java:999:optimization FloatDoubleLHSMinNaNIsNaN: "Math.min(x, y) |-> NaN (when (is_Float x | is_Double x) && is_NaN x)"
./compiler/grepped.java:999:optimization FloatDoubleLHSMaxNaNIsNaN: "Math.max(x, y) |-> NaN (when (is_Float x | is_Double x) && is_NaN x)"
./compiler/grepped.java:999:optimization FloatDoubleRHSMinNaNIsNaN: "Math.min(x, y) |-> NaN (when (is_Float y | is_Double y) && is_NaN y)"
./compiler/grepped.java:999:optimization FloatDoubleRHSMaxNaNIsNaN: "Math.max(x, y) |-> NaN (when (is_Float y | is_Double y) && is_NaN y)"
./compiler/grepped.java:999:optimization FloatLHSMaxOfNegInfinity: "Math.max(-inf, y) |-> y"
./compiler/grepped.java:999:optimization FloatRHSMaxOfNegInfinity: "Math.max(y, -inf) |-> y"
./compiler/grepped.java:999:optimization FloatLHSMinOfPosInfinity: "Math.min(inf, y) |-> y"
./compiler/grepped.java:999:optimization FloatRHSMinOfPosInfinity: "Math.min(y, inf) |-> y"
./compiler/grepped.java:999:optimization EliminateRedundantNegative: "(-x) * (-y) |-> x * y"
./compiler/grepped.java:999:optimization MulNeutral2: "x * const(1) |-> x"
./compiler/grepped.java:999:optimization MulEliminator: "x * const(0) |-> const(0)"
./compiler/grepped.java:999:optimization MulNeutral: "x * const(1) |-> x"
./compiler/grepped.java:999:optimization MulNegate: "x * const(-1) |-> -x"
./compiler/grepped.java:999:optimization MulPower2: "x * const(2^j) |-> x << const(j) when (j >= 0)"
./compiler/grepped.java:999:optimization MulPower2Add1: "x * const((2^j) + 1) |-> x << const(j) + x"
./compiler/grepped.java:999:optimization MulPower2Sub1: "x * const((2^j) - 1) |-> x << const(j) - x"
./compiler/grepped.java:999:optimization MulPower2AddPower2: "x * const(2^j + 2^k) |-> x << const(j) + x << const(k) // false branch"
./compiler/grepped.java:999:optimization MulPower2Add1: "     x * const(2^j + 1)   |-> x << const(j) + x             // true branch todo duplicate?"
./compiler/grepped.java:999:optimization MulNegativeConstShift: "x * const(-(2^j)) |-> -(x << const(j))"
./compiler/grepped.java:999:optimization NegateCancel: "-(-e) |-> e"
./compiler/grepped.java:999:optimization DistributeSubtraction: "-(x - y) |-> (y - x) if ~(is_Float (x - y))"
./compiler/grepped.java:999:optimization NegativeShift: "-(x >> y) |-> x >>> y when (is_Constant y &&"
./compiler/grepped.java:999:optimization NotCancel: "Not(Not(e)) |-> e"
./compiler/grepped.java:999:optimization OrEqual: "(x | x) |-> x"
./compiler/grepped.java:999:optimization OrShiftConstantRight: "((ConstantExpr x) | y) |-> (y | (ConstantExpr x)) when ~(is_ConstantExpr y)"
./compiler/grepped.java:999:optimization OrLeftFallthrough: "(x | y) |-> x when (canBeZero x.stamp & canBeOne y.stamp) = 0"
./compiler/grepped.java:999:optimization OrRightFallthrough: "(x | y) |-> y when (canBeZero y.stamp & canBeOne x.stamp) = 0"
./compiler/grepped.java:999:optimization EliminateRedundantFalse: "(x | false) |-> x"
./compiler/grepped.java:999:optimization OrNotOperands: "(~x | ~y) |-> ~(x & y)"
./compiler/grepped.java:999:optimization ReturnXOnZeroShift: "(x >> const(0)) |-> x"
./compiler/grepped.java:999:optimization TransformToUnsignedOnPositiveX: "(x >> y) |-> (x >>> y)"
./compiler/grepped.java:999:optimization EliminateRHS: "(x >> y) |-> x"
./compiler/grepped.java:999:optimization EliminateConstantRHS: "(x >> const(y)) |-> x"
./compiler/grepped.java:999:optimization TransformRightShiftIntoConstantShift: "(x >> const(y)) |-> const(lo >> (y & mask(x >> y)))"
./compiler/grepped.java:999:optimization RightShiftsBecomeZero: "((a >> const(b)) >> const(y)) |-> const(0)"
./compiler/grepped.java:999:optimization RightShiftsBecomeNegativeOne: "((a >> const(b)) >> const(y)) |-> const(-1)"
./compiler/grepped.java:999:optimization RightShiftsMerge1: "((a >> const(b)) >> const(y)) |-> (a >> const(mask(x >> y)))"
./compiler/grepped.java:999:optimization RightShiftsMerge2: "((a >> const(b)) >> const(y)) |-> (a >> total)"
./compiler/grepped.java:999:optimization ShiftRightByConstantAnd: "(x >> const(y)) |-> (x >> const(y & mask(x >> y)))"
./compiler/grepped.java:999:optimization EliminateRedundantMod: "((x - x % y) / y) |-> x / y"
./compiler/grepped.java:999:optimization DivisionByOneIsSelf: "a / const(1) |-> a"
./compiler/grepped.java:999:optimization DivisionByNegativeOneIsNegativeSelf: "a / const(-1) |-> -a"
./compiler/grepped.java:999:optimization TrueCLessZero: "x / c |-> -((x + ((x >> const(x.getBits() - 1)) >>> const(x.getBits() - j))) >> const(j))"
./compiler/grepped.java:999:optimization FalseCLessZero: "x / c |-> -(x >> const(j))"
./compiler/grepped.java:999:optimization TrueCGeqZero: "x / c |-> ((x + ((x >> const(x.getBits() - 1)) >>> const(x.getBits() - j))) >> const(j))"
./compiler/grepped.java:999:optimization FalseCGeqZero: "x / c |-> (x >> const(j))"
./compiler/grepped.java:999:optimization RemainderWhenYNegative: "(x % y) |-> (x % -y) when (is_Constant y && y < 0 && y != minValue) todo not sure"
./compiler/grepped.java:999:optimization RemainderCompareZeroEquivalent: "x % y == 0 |-> (x & (y-1)) == 0 when (y = const(2^j))"
./compiler/grepped.java:999:optimization RemainderWhenXPositive: "x % y |-> (x & (y - 1)) when (is_Constant y && stamp_expr x = IntegerStamp b lo hi && lo >= 0)"
./compiler/grepped.java:999:optimization RemainderWhenXNegative: "x % y |-> -((-x) & (y - 1)) when (is_Constant y && stamp_expr x = IntegerStamp b lo hi && hi <= 0)"
./compiler/grepped.java:999:optimization SubSelfIsZero: "(x - x) |-> 0"
./compiler/grepped.java:999:optimization SubAfterAddRight: "((x + y) - y) |-> x"
./compiler/grepped.java:999:optimization SubAfterAddLeft: "((x + y) - x) |-> y"
./compiler/grepped.java:999:optimization SubAfterSubLeft: "((x - y) - x) |-> (-y)"
./compiler/grepped.java:999:optimization SubThenAddLeft: "(x - (x + y)) |-> (-y)"
./compiler/grepped.java:999:optimization SubThenAddRight: "(y - (x + y)) |-> (-x)"
./compiler/grepped.java:999:optimization SubThenSubLeft: "(x - (x - y)) |-> y"
./compiler/grepped.java:999:optimization SubtractZero: "x - 0 |-> x"
./compiler/grepped.java:999:optimization SubNegativeConstant: "x - y |-> x + const(y) when (is_Constant y && (y < 0 || todo))"
./compiler/grepped.java:999:optimization ZeroSubtractValue: "(0 - x) |-> (-x)"
./compiler/grepped.java:999:optimization SubNegativeValue: "(x - (-y)) |-> (x + y)"
./compiler/grepped.java:999:optimization UnsignedMergeDivision: "const(a) |/| const(b) |-> Constant(a |/| b)"
./compiler/grepped.java:999:optimization DivisionByOneIsSelf: "x |/| const(1) |-> x"
./compiler/grepped.java:999:optimization DivisionByPower2: "x |/| const(2^j) |-> x >>> const(j)"
./compiler/grepped.java:999:optimization UnsignedRemXYConst: "x |%| y |-> const(x |%| y) when (is_Constant y && is_Constant x && y != 0)"
./compiler/grepped.java:999:optimization UnsignedRemWhenYOne: "x |%| const(1) |-> const(0)"
./compiler/grepped.java:999:optimization UnsignedRemWhenYPower2: "x |%| const(c) |-> (x & (c - 1)) when (c = const(2^j))"
./compiler/grepped.java:999:optimization XorSelfIsFalse: "(x ^ x) |-> false"
./compiler/grepped.java:999:optimization XorShiftConstantRight: "((ConstantExpr x) ^ y) |-> (y ^ (ConstantExpr x)) when ~(is_ConstantExpr y)"
./compiler/grepped.java:999:optimization EliminateRedundantFalse: "(x ^ false) |-> x"
./compiler/grepped.java:999:optimization MaskOutRHS: "(x ^ const(y)) |-> ~(x)"